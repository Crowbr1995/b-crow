{"ast":null,"code":"var _jsxFileName = \"/home/bryan/Documents/Projects/Portfolio/portfolio/src/components/Contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport emailjs from \"emailjs-com\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Contact = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Set your EmailJS service ID, template ID, and user ID\n    const serviceId = \"service_0fune2l\";\n    const templateId = \"template_k7wdmjk\";\n    const publicKey = \"-mCzh2K-LSJII0RZ-\";\n\n    // Create the email template parameters\n    const templateParams = {\n      from_name: name,\n      from_email: email,\n      message: message\n    };\n\n    // Send the email using EmailJS\n    emailjs.send(serviceId, templateId, templateParams, userId).then(response => {\n      console.log(\"Email sent successfully!\", response.status, response.text);\n      setStatus(\"success\");\n    }).catch(error => {\n      console.error(\"Email failed to send:\", error);\n      setStatus(\"error\");\n    });\n\n    // Reset the form fields\n    setName(\"\");\n    setEmail(\"\");\n    setMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Your Name\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Your Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Your Message\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), status === \"success\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Email sent successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 32\n    }, this), status === \"error\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error sending email. Please try again later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Contact, \"wQesvA9zyNzc6ijvdV7vmv7vvfs=\");\n_c = Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","emailjs","jsxDEV","_jsxDEV","Contact","_s","name","setName","email","setEmail","message","setMessage","status","setStatus","handleSubmit","e","preventDefault","serviceId","templateId","publicKey","templateParams","from_name","from_email","send","userId","then","response","console","log","text","catch","error","onSubmit","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bryan/Documents/Projects/Portfolio/portfolio/src/components/Contact.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport emailjs from \"emailjs-com\";\n\nexport const Contact = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Set your EmailJS service ID, template ID, and user ID\n    const serviceId = \"service_0fune2l\";\n    const templateId = \"template_k7wdmjk\";\n    const publicKey = \"-mCzh2K-LSJII0RZ-\";\n\n    // Create the email template parameters\n    const templateParams = {\n      from_name: name,\n      from_email: email,\n      message: message,\n    };\n\n    // Send the email using EmailJS\n    emailjs\n      .send(serviceId, templateId, templateParams, userId)\n      .then((response) => {\n        console.log(\"Email sent successfully!\", response.status, response.text);\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        console.error(\"Email failed to send:\", error);\n        setStatus(\"error\");\n      });\n\n    // Reset the form fields\n    setName(\"\");\n    setEmail(\"\");\n    setMessage(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Your Name\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        required\n      />\n      <input\n        type=\"email\"\n        placeholder=\"Your Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        required\n      />\n      <textarea\n        placeholder=\"Your Message\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        required\n      ></textarea>\n      {status === \"success\" && <p>Email sent successfully!</p>}\n      {status === \"error\" && <p>Error sending email. Please try again later.</p>}\n      <button type=\"submit\">Send Email</button>\n    </form>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMc,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,SAAS,GAAG,iBAAiB;IACnC,MAAMC,UAAU,GAAG,kBAAkB;IACrC,MAAMC,SAAS,GAAG,mBAAmB;;IAErC;IACA,MAAMC,cAAc,GAAG;MACrBC,SAAS,EAAEf,IAAI;MACfgB,UAAU,EAAEd,KAAK;MACjBE,OAAO,EAAEA;IACX,CAAC;;IAED;IACAT,OAAO,CACJsB,IAAI,CAACN,SAAS,EAAEC,UAAU,EAAEE,cAAc,EAAEI,MAAM,CAAC,CACnDC,IAAI,CAAEC,QAAQ,IAAK;MAClBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,QAAQ,CAACd,MAAM,EAAEc,QAAQ,CAACG,IAAI,CAAC;MACvEhB,SAAS,CAAC,SAAS,CAAC;IACtB,CAAC,CAAC,CACDiB,KAAK,CAAEC,KAAK,IAAK;MAChBJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7ClB,SAAS,CAAC,OAAO,CAAC;IACpB,CAAC,CAAC;;IAEJ;IACAN,OAAO,CAAC,EAAE,CAAC;IACXE,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACER,OAAA;IAAM6B,QAAQ,EAAElB,YAAa;IAAAmB,QAAA,gBAC3B9B,OAAA;MACE+B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,WAAW;MACvBC,KAAK,EAAE9B,IAAK;MACZ+B,QAAQ,EAAGtB,CAAC,IAAKR,OAAO,CAACQ,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;MACzCG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFxC,OAAA;MACE+B,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,YAAY;MACxBC,KAAK,EAAE5B,KAAM;MACb6B,QAAQ,EAAGtB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;MAC1CG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFxC,OAAA;MACEgC,WAAW,EAAC,cAAc;MAC1BC,KAAK,EAAE1B,OAAQ;MACf2B,QAAQ,EAAGtB,CAAC,IAAKJ,UAAU,CAACI,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;MAC5CG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACX/B,MAAM,KAAK,SAAS,iBAAIT,OAAA;MAAA8B,QAAA,EAAG;IAAwB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACvD/B,MAAM,KAAK,OAAO,iBAAIT,OAAA;MAAA8B,QAAA,EAAG;IAA4C;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC1ExC,OAAA;MAAQ+B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEX,CAAC;AAACtC,EAAA,CAlEWD,OAAO;AAAAwC,EAAA,GAAPxC,OAAO;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}